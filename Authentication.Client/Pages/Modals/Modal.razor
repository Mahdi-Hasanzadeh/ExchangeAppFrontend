<div class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 backdrop-blur-sm z-50 transition-opacity duration-300"
     style="opacity: @(IsVisible ? "1" : "0"); pointer-events: @(IsVisible ? "auto" : "none");">
    <div class="bg-white rounded-xl shadow-2xl p-6 max-w-md w-full transform transition-all duration-300 scale-95"
         style="transform: scale(@(IsVisible ? "1" : "0.95")); opacity: @(IsVisible ? "1" : "0");">

        <!-- Modal Header -->
        <div class="flex justify-between items-center border-b pb-3">
            <h5 class="text-xl font-semibold text-red-600">⚠️ هشدار</h5>
            <button type="button" class="text-gray-500 hover:text-gray-700 transition-colors" @onclick="CloseModal">✖</button>
        </div>

        <!-- Modal Body -->
        <div class="py-4 text-center">
            <h5 class="text-gray-800 font-medium">@ConfirmationMessage</h5>
            <h6 class="text-gray-600 mt-1">@_customMessage</h6>
        </div>

        <!-- Modal Footer -->
        <div class="flex justify-center space-x-3 gap-2 border-t pt-3">
            <InfoButton ButtonType="button" OnClick="CloseModal" Content="انصراف" />
            <DangerButton ButtonType="button" OnClick="Confirm" Content="@SubmitButtonText" />
        </div>
    </div>
</div>

@code {

    [Parameter]
    public string ConfirmationMessage { get; set; } = "آیا مطمئن هستید؟";

    private string _customMessage { get; set; }

    [Parameter]
    public string SubmitButtonText { get; set; } = "تایید";

    [Parameter]
    public EventCallback OnConfirm { get; set; }

    private bool IsVisible { get; set; } = false;

    public async Task ShowModal(string message = "")
    {
        _customMessage = message;
        IsVisible = true;
        StateHasChanged();
    }   

    public async Task CloseModal()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private async Task Confirm()
    {
        await OnConfirm.InvokeAsync();
        CloseModal();
    }
}
